{"version":3,"sources":["webpack:///webpack/bootstrap f2590e0974b581cbfd9a","webpack:///./public/projects/theblackknight/src/index.js","webpack:///./src/Engine.js","webpack:///./src/Element.js","webpack:///./src/Class.js","webpack:///./src/Component/index.js","webpack:///./src/Scene/index.js","webpack:///./src/Entity/index.js","webpack:///./src/Component/Canvas.js"],"names":["width","height","attachDOM","document","getElementById","run","scene","entity","debug","attachEntity","attachScene","canvas","clearColor","Engine","storage","scenes","lastUpdate","fps","latence","tick","dom","stopped","map","update","context","render","timeStart","window","performance","now","requestAnimationFrame","bind","Math","min","floor","Error","push","initialize","isComposedOf","setParentDOM","parentDOM","createElement","id","className","style","position","appendChild","forEach","Element","components","componentFunctions","destroyed","size","callComponentFunction","decompose","name","component","composedBy","componentName","index","pluggedFunctions","pluggedFunction","filter","compName","splice","callback","exist","Boolean","find","functionName","Array","prototype","slice","call","Class","generateId","props","key","hasOwnProperty","random","toString","substring","Component","functions","Object","getOwnPropertyNames","getPrototypeOf","prop","addComponentFunction","Scene","entities","gravity","scale","camera","x","y","following","compose","follow","pooling","entityPooling","poolX","reset","Entity","lastPosition","relativePosition","mass","MASS","NONE","direction","speed","velocity","standing","falling","gravityFactor","strokeStyle","strokeRect","sqrt","bottom","right","entBottom","entRight","colBottom","colTop","colLeft","colRight","round","SOLID","WEAK","Canvas","getContext","clear","ctx","clearRect","fillStyle","fillRect"],"mappings":"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","file":"projects/theblackknight/sideral.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f2590e0974b581cbfd9a","import Engine from \"src/Engine\";\nimport Scene from \"src/Scene\";\nimport Entity from \"src/Entity\";\n\n\n// Define the size of the engine\nEngine.width(500);\nEngine.height(200);\n\n// Render the engine into a dom\nEngine.attachDOM(document.getElementById(\"sideral-app\"));\n\n// Start the loop\nEngine.run();\n\n\n// Custom code\nconst scene = new Scene(),\n    entity = new Entity();\n\nentity.debug = true;\n\nscene.attachEntity(entity, 10, 10);\nEngine.attachScene(scene);\n\nscene.canvas.clearColor = \"whitesmoke\";\n\n\n// WEBPACK FOOTER //\n// ./public/projects/theblackknight/src/index.js","import Element from \"./Element\";\nimport Scene from \"./Scene\";\n\n\nclass Engine extends Element {\n\n    /* LIFECYCLE */\n    constructor () {\n        super();\n\n        /**\n         * Global data to store\n         * @type {{}}\n         */\n        this.storage = {};\n\n        /**\n         * List of scenes attached to engine\n         * @type {Array}\n         */\n        this.scenes = [];\n\n        /**\n         * Time since last update\n         * @type {number}\n         */\n        this.lastUpdate = 0;\n\n        /**\n         * Current FPS (Frames per second)\n         * @type {number}\n         */\n        this.fps = 60;\n\n        /**\n         * Current latence between each frame (in ms)\n         * @type {number}\n         */\n        this.latence = 0;\n\n        /**\n         * Current latence between each frame (in second)\n         * @type {number}\n         */\n        this.tick = 1;\n\n        /**\n         * DOM of the engine\n         * @type {null}\n         */\n        this.dom = null;\n\n        /**\n         * Stop the run\n         * @type {boolean}\n         * @readonly\n         */\n        this.stopped = false;\n    }\n\n    /**\n     * Update\n     * @returns {void}\n     */\n    update () {\n        super.update();\n\n        this.scenes.map(scene => scene.update());\n    }\n\n    /**\n     * Render\n     * @param {*=} context: canvas render (Engine has no context, it's only for overriding)\n     * @returns {void}\n     */\n    render (context) {\n        super.render(context);\n\n        this.scenes.map(scene => scene.render(context));\n    }\n\n    /**\n     * Run the engine\n     * @param {number=} timeStart: time sended by requestAnimationFrame\n     * @returns {void|null} null\n     */\n    run (timeStart) {\n        if (this.stopped) {\n            return null;\n        }\n\n        timeStart = timeStart || window.performance.now();\n        requestAnimationFrame(this.run.bind(this));\n\n        // 100ms latence max\n        this.latence    = Math.min(timeStart - this.lastUpdate, 100);\n        this.fps        = Math.floor(1000 / this.latence);\n        this.tick       = 1000 / (this.fps * 1000);\n\n        this.update();\n        this.render(null);\n\n        this.lastUpdate = window.performance.now();\n    }\n\n    /**\n     * Stop the loop\n     * @returns {void}\n     */\n    stop () {\n        this.stopped    = true;\n        this.tick       = 0;\n    }\n\n    /**\n     * Restart the loop\n     * @returns {void}\n     */\n    restart () {\n        this.stopped    = false;\n        this.run();\n    }\n\n    /**\n     * Attach a scene to current engine\n     * @param {*} scene: the scene to attach to the engine\n     * @returns {Engine} the current engine\n     */\n    attachScene (scene) {\n        if (!scene || (scene && !(scene instanceof Scene))) {\n            throw new Error(\"Engine.attachScene : scene must be an instance of Scene.\");\n        }\n\n        scene.width(this.width());\n        scene.height(this.height());\n\n        this.scenes.push(scene);\n        scene.initialize();\n\n        if (this.dom && scene.isComposedOf(\"canvas\")) {\n            scene.canvas.setParentDOM(this.dom);\n        }\n\n        return this;\n    }\n\n    reorganizeCanvas () {\n\n    }\n\n    /**\n     * Attach a dom to the parent dom passed by parameter\n     * @param {*} parentDOM: the dom to attach the engine\n     * @returns {Engine} : the current Engine\n     */\n    attachDOM (parentDOM) {\n        if (!parentDOM) {\n            throw new Error(\"Engine.initialize : dom must be passed to parameters and must be valid.\");\n        }\n\n        if (!this.dom) {\n            this.dom                = document.createElement(\"div\");\n            this.dom.id             = this.id;\n            this.dom.className      = \"sideral-engine\";\n            this.dom.style.position = \"relative\";\n        }\n\n        parentDOM.appendChild(this.dom);\n\n        this.scenes.forEach((scene) => {\n            if (scene.isComposedOf(\"canvas\")) {\n                scene.canvas.setParentDOM(this.dom);\n            }\n        });\n\n        return this;\n    }\n\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * The name of the engine\n     * @returns {string} the name\n     */\n    get name () {\n        return \"engine\";\n    }\n\n    /**\n     * Get or set the width\n     * @param {number=} width: if exist, width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            if (this.dom) {\n                this.dom.width = width;\n            }\n\n            this.scenes.forEach((scene) => {\n                scene.width(width);\n            });\n        }\n\n        return super.width(width);\n    }\n\n    /**\n     * Get or set the height\n     * @param {number=} height: if exist, height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            if (this.dom) {\n                this.dom.height = height;\n            }\n\n            this.scenes.forEach((scene) => {\n                scene.height(height);\n            });\n        }\n\n        return super.height(height);\n    }\n}\n\n\nexport default new Engine();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Engine.js","import Class from \"./Class\";\nimport Component from \"./Component\";\n\n\nexport default class Element extends Class {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * List of components added to this element by their names\n         * @type {Array<string>}\n         */\n        this.components = [];\n\n        /**\n         * List of all component functions to be called\n         * @type {Array<Array<string>>}\n         */\n        this.componentFunctions = {};\n\n        /**\n         * Know if this component is detroyed or not\n         * @type {boolean}\n         * @private\n         */\n        this.destroyed = false;\n\n        /**\n         * Size of the element\n         * @type {{width: number, height: number}}\n         * @readonly\n         */\n        this.size = { width: 0, height: 0 };\n    }\n\n    /**\n     * Update the element\n     * @returns {void}\n     */\n    update () {\n        this.callComponentFunction(\"update\");\n    }\n\n    /**\n     * Render the element\n     * @param {*} context: context to render the element\n     * @returns {void}\n     */\n    render (context) {\n        this.callComponentFunction(\"render\", context);\n    }\n\n\n    /* METHODS */\n\n    /**\n     * Destroy the element\n     * @returns {void}\n     */\n    destroy () {\n        this.components.map(name => this.decompose(name));\n        this.destroyed = true;\n    }\n\n    /**\n     * Reset an element\n     * @returns {void}\n     */\n    reset () {\n        this.destroyed = false;\n    }\n\n\n    /* COMPONENTS */\n\n    /**\n     * Add a component into this element\n     * @param {Component} component: The component to be added\n     * @returns {Element} current element\n     */\n    compose (component) {\n        if (!(component instanceof Component)) {\n            throw new Error(\"Element.compose : the component is not an instance of Component.\");\n        }\n\n        component.composedBy = this;\n        this[component.name] = component;\n        this.components.push(component.name);\n        component.initialize();\n\n        return this;\n    }\n\n    /**\n     * Remove a component from the element\n     * @param {string} componentName: The name of the component\n     * @returns {Element} current element\n     */\n    decompose (componentName) {\n        this.components.map((name, index) => {\n            if (name === componentName) {\n                this[name].pluggedFunctions.map((pluggedFunction) => {\n                    if (this.componentFunctions[pluggedFunction]) {\n                        this.componentFunctions[pluggedFunction] = this.componentFunctions[pluggedFunction].filter(compName => compName !== name);\n                    }\n\n                    return null;\n                });\n\n                this.components.splice(index, 1);\n            }\n\n            return null;\n        });\n\n        return this;\n    }\n\n    /**\n     * Return true if the element has the component by its name\n     * @param {string} componentName: The name of the component\n     * @param {function=} callback: function to be executed if element is composed of the component\n     * @returns {boolean|function} the element is composed of the component\n     */\n    isComposedOf (componentName, callback) {\n        const exist = Boolean(this.components.find(component => component === componentName));\n\n        return callback && exist ? callback() : exist;\n    }\n\n    /**\n     * Add a new component function to be executed before the parent function\n     * @param {string} componentName: the name of the component\n     * @param {string} functionName: the name of the function\n     * @returns {void|null} nothing\n     */\n    addComponentFunction (componentName, functionName) {\n        if (!this.isComposedOf(componentName) || !this[functionName]) {\n            return null;\n        }\n\n        if (!this.componentFunctions[functionName]) {\n            this.componentFunctions[functionName] = [];\n        }\n\n        this.componentFunctions[functionName].push(componentName);\n    }\n\n    /**\n     * Call functions of components by name of the function\n     * @param {...*} functionName: the name of the function and other arguments to be transmitted into components\n     * @returns {void}\n     */\n    callComponentFunction (functionName) {\n        if (this.componentFunctions[functionName]) {\n            this.componentFunctions[functionName].map((name) => this[name][functionName](...Array.prototype.slice.call(arguments, 1)));\n        }\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * Name of the element\n     * @returns {string} the name\n     */\n    get name () {\n        return \"element\";\n    }\n\n    /**\n     * Get or set a width\n     * @param {number=} width: if exist, width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            this.size.width = width;\n        }\n\n        return this.size.width;\n    }\n\n    /**\n     * Get or set a height\n     * @param {number=} height: if exist, height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            this.size.height = height;\n        }\n\n        return this.size.height;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Element.js","export default class Class {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n\n        /**\n         * Unique id of element\n         * @type {string}\n         */\n        this.id = Class.generateId();\n    }\n\n    /**\n     * Set attributes to current instance\n     * @param {*} props: properties to merge\n     * @returns {*} SideralClass: current instance\n     */\n    props (props = {}) {\n        for (const key in props) {\n            if (props.hasOwnProperty(key)) {\n                this[key] = props[key];\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Initialization of the element after it is created into the engine\n     * @returns {void}\n     */\n    initialize () { }\n\n    /* METHODS */\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * String identifier\n     * @returns {string} the name of the class\n     */\n    get name () {\n        return \"Class\";\n    }\n\n    /* STATICS */\n\n    /**\n     * Generate an unique id\n     * @returns {string} return the unique id\n     */\n    static generateId () {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).\n        substring(1);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Class.js","import Class from \"./../Class\";\n\n\nexport default class Component extends Class {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * Element which using this component\n         * @type {Element}\n         */\n        this.composedBy = null;\n\n        /**\n         * List of all functions plugged to the parent\n         * @type {Array}\n         */\n        this.pluggedFunctions = [];\n    }\n\n    /**\n     * Initialization of the component after it is composed\n     * @returns {void}\n     */\n    initialize () {\n        if (!this.composedBy) {\n            throw new Error(\"Component.initialize : A Component must be composed by an element before calling Initiliaze.\");\n        }\n\n        const functions = Object.getOwnPropertyNames(Object.getPrototypeOf(this)).filter(prop => prop !== \"constructor\" && prop !== \"initialize\");\n\n        this.pluggedFunctions = [];\n\n        functions.map((key) => {\n            if (this.composedBy[key]) {\n                this.composedBy.addComponentFunction(this.name, key);\n                this.pluggedFunctions.push(key);\n            }\n\n            return null;\n        });\n    }\n\n\n    /* METHODS */\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * Name of the component\n     * @returns {string} the name\n     */\n    get name () {\n        return \"component\";\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Component/index.js","import Element from \"../Element\";\nimport Entity from \"../Entity\";\nimport Canvas from \"../Component/Canvas\";\n\n\nexport default class Scene extends Element {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * List of entities\n         * @type {Array<Entity>}\n         */\n        this.entities = [];\n\n        /**\n         * Gravity of the scene\n         * @type {number}\n         */\n        this.gravity = 0;\n\n        /**\n         * Scale of all entities behind this scene\n         * @type {number}\n         */\n        this.scale = 1;\n\n        /**\n         * Position of the camera\n         * @type {{x: number, y: number, follow: Entity|null}}\n         */\n        this.camera = {x: 0, y: 0, following: null};\n    }\n\n    /**\n     * Initialization\n     * @returns {void}\n     */\n    initialize () {\n        super.initialize();\n\n        this.compose(new Canvas(this.width(), this.height()));\n    }\n\n    /**\n     * Update\n     * @returns {void}\n     */\n    update () {\n        super.update();\n\n        if (this.camera.follow) {\n            this.camera.x = this.camera.follow.x() + (this.camera.follow.width() * this.scale / 2) - (this.width() / 2 / this.scale);\n            this.camera.y = this.camera.follow.y() + (this.camera.follow.height() * this.scale / 2) - (this.height() / 2 / this.scale);\n        }\n\n        this.entities.map(entity => entity.update());\n    }\n\n    /**\n     * Render\n     * @param {*} context: context of the canvas (created inside this function)\n     * @returns {void}\n     */\n    render (context) {\n        context = this.canvas.context;\n        super.render(context);\n\n        this.entities.map(entity => entity.render(context));\n    }\n\n    /* METHODS */\n\n    /**\n     * Attach an entity to the scene\n     * @param {Entity} entity: entity to attach\n     * @param {number} x: position x of entity\n     * @param {number} y: position y of entity\n     * @returns {Scene} current instance\n     */\n    attachEntity (entity, x = 0, y = 0) {\n        if (!entity || (entity && !(entity instanceof Entity))) {\n            throw new Error(\"Scene.attachEntity : entity must be an instance of Entity\");\n        }\n\n        // Entity pooling mode\n        if (entity.pooling) {\n            const entityPooling = this.entities.find(poolX => poolX.pooling && poolX.destroyed);\n\n            if (entityPooling) {\n                entityPooling.x(x);\n                entityPooling.y(y);\n                entityPooling.reset();\n\n                return this;\n            }\n        }\n\n        this.entities.push(entity);\n        entity.x(x);\n        entity.y(y);\n        entity.scene = this;\n\n        entity.initialize();\n\n        return this;\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * The name of the scene\n     * @returns {string} the name\n     */\n    get name () {\n        return \"scene\";\n    }\n\n    /**\n     * Get or set the width\n     * @param {number=} width: if exist, width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            if (this.isComposedOf(\"canvas\")) {\n                this.canvas.width(width);\n            }\n        }\n\n        return super.width(width);\n    }\n\n    /**\n     * Get or set the height\n     * @param {number=} height: if exist, height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            if (this.isComposedOf(\"canvas\")) {\n                this.canvas.height(height);\n            }\n        }\n\n        return super.height(height);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Scene/index.js","import Element from \"./../Element\";\nimport Engine from \"./../Engine\";\n\n\nexport default class Entity extends Element {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * Show more information about entity on screen\n         * @type {boolean}\n         */\n        this.debug = false;\n\n        /**\n         * Reference to the current scene\n         * @type {*}\n         */\n        this.scene = null;\n\n        /**\n         * Position of entity\n         * @type {{x: number, y: number}}\n         * @readonly\n         */\n        this.position = {x: 0, y: 0};\n\n        /**\n         * Last position of entity\n         * @type {{x: number, y: number}}\n         * @readonly\n         */\n        this.lastPosition = {x: 0, y: 0};\n\n        /**\n         * If true, the position of this entity will be compared to the camera position\n         * @type {boolean}\n         */\n        this.relativePosition = false;\n\n        /**\n         * Mass of the entity (used for collision)\n         * @type {string}\n         */\n        this.mass = Entity.MASS.NONE;\n\n        /**\n         * Direction movement of the entity\n         * @type {{x: number, y: number}}\n         */\n        this.direction = {x: 0, y: 0};\n\n        /**\n         * Speed movement of the entity\n         * @type {{x: number, y: number}}\n         */\n        this.speed = {x: 100, y: 100};\n\n        /**\n         * Velocity of the entity\n         * @type {{x: number, y: number}}\n         * @readonly\n         */\n        this.velocity = {x: 0, y: 0};\n\n        /**\n         * Know if the entity is standing on a ground (or over an entity)\n         * @type {boolean}\n         * @readonly\n         */\n        this.standing = false;\n\n        /**\n         * Know if the entity is falling (used with gravity)\n         * @type {boolean}\n         * @readonly\n         */\n        this.falling = false;\n\n        /**\n         * Factor of scene gravity\n         * @type {number}\n         */\n        this.gravityFactor = 1;\n\n        /**\n         * If true, this entity will pass into \"pooling mode\" (for memory sake)\n         * @type {boolean}\n         */\n        this.pooling = false;\n\n        this.width(10);\n        this.height(10);\n    }\n\n    /**\n     * Destroy the element\n     * @returns {void}\n     */\n    destroy () {\n        if (!this.pooling) {\n            super.destroy();\n        }\n\n        this.destroyed = true;\n    }\n\n    /**\n     * Update\n     * @returns {void}\n     */\n    update () {\n        super.update();\n\n        if (this.direction.x) {\n            this.velocity.x = this.speed.x * this.direction.x * Engine.tick;\n            this.x(this.x() + this.velocity.x);\n        }\n\n        this.velocity.y = this.scene && this.scene.gravity && this.gravityFactor ? this.scene.gravity * this.gravityFactor * Engine.tick : 0;\n        if (this.velocity.y || this.direction.y) {\n            this.velocity.y += this.speed.y * this.direction.y * Engine.tick;\n            this.y(this.y() + this.velocity.y);\n        }\n    }\n\n    /**\n     * Render\n     * @param {*} context: canvas context\n     * @returns {void}\n     */\n    render (context) {\n        super.render(context);\n\n        if (this.debug) {\n            context.strokeStyle = \"rgb(255, 0, 0)\";\n            context.strokeRect(this.x() - this.scene.camera.x, this.y() - this.scene.camera.y, this.width(), this.height());\n        }\n    }\n\n    /* METHODS */\n\n    /**\n     * Get distance between this entity and an other\n     * @param {Entity} entity: entity target\n     * @returns {number} distance from entity target\n     */\n    distanceTo (entity) {\n        if (!entity) {\n            return 0;\n        }\n\n        const x = (this.x() + (this.width() / 2)) - (entity.x() + (entity.width() / 2)),\n            y   = (this.y() + (this.height() / 2)) - (entity.y() + (entity.height() / 2));\n\n        return Math.sqrt((x * x) + (y * y));\n    }\n\n    /**\n     * Compare coordinate to another entity to provide a coordinate direction\n     * @param {Entity} entity: entity to compare\n     * @returns {{x: number, y: number}} coordinate direction\n     */\n    directionTo (entity) {\n        const bottom    = this.y() + this.height(),\n            right       = this.x() + this.width(),\n            entBottom   = entity.y() + entity.height(),\n            entRight    = entity.x() + entity.width(),\n            colBottom   = entBottom - this.y(),\n            colTop      = bottom - entity.y(),\n            colLeft     = right - entity.x(),\n            colRight    = entRight - this.x();\n\n        if (colTop < colBottom && colTop < colLeft && colTop < colRight) {\n            return {x: 0, y: 1};\n\n        } else if (colBottom < colTop && colBottom < colLeft && colBottom < colRight) {\n            return {x: 0, y: -1};\n\n        } else if (colLeft < colRight && colLeft < colTop && colLeft < colBottom) {\n            return {x: 1, y: 0};\n\n        } else if (colRight < colLeft && colRight < colTop && colRight < colBottom) {\n            return {x: -1, y: 0};\n\n        }\n\n        return {x: 0, y: 0};\n    }\n\n    /**\n     * Know if the target entity and the current entity is intersecting\n     * @param {Entity} entity: entity to compare\n     * @returns {boolean} true if the entity intersect the entity target\n     */\n    intersect (entity) {\n        return !(entity.x() > (this.x() + this.width()) ||\n        (entity.x() + entity.width()) < this.x() ||\n        entity.y() > (this.y() + this.height()) ||\n        (entity.x() + entity.height()) < this.y());\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * Name of the entity\n     * @returns {string} name\n     */\n    get name () {\n        return \"entity\";\n    }\n\n    get moving () {\n        return this.direction.x || this.direction.y;\n    }\n\n    /**\n     * Get or set x position\n     * @param {number=} x: if exist, x will be setted\n     * @returns {number} the current position x\n     */\n    x (x) {\n        if (typeof x !== \"undefined\") {\n            this.lastPosition.x = this.position.x;\n            this.position.x     = Math.round(x);\n        }\n\n        return this.relativePosition && this.scene ? this.position.x - this.scene.camera.x : this.position.x;\n    }\n\n    /**\n     * Get or set y position\n     * @param {number=} y: if exist, y will be setted\n     * @returns {number} the current position y\n     */\n    y (y) {\n        if (typeof y !== \"undefined\") {\n            this.lastPosition.y = this.position.y;\n            this.position.y     = Math.round(y);\n        }\n\n        return this.relativePosition && this.scene ? this.position.y - this.scene.camera.y : this.position.y;\n    }\n}\n\nEntity.MASS = {\n    SOLID: \"solid\",\n    WEAK: \"weak\",\n    NONE: \"none\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Entity/index.js","import Component from \"./index\";\n\n\nexport default class Canvas extends Component {\n\n    /* LIFECYCLE */\n    /**\n     * Canvas constructor\n     * @param {number} width: width of the canvas\n     * @param {number} height: height of the canvas\n     * @param {*=} parentDOM: DOM node to attach the canvas\n     */\n    constructor (width, height, parentDOM) {\n        super();\n\n        /**\n         * DOM parent of the canvas\n         */\n        this.parentDOM = parentDOM;\n\n        /**\n         * Dom of the canvas\n         * @type {*}\n         */\n        this.dom = null;\n\n        /**\n         * Context of the canvas\n         * @type {*}\n         */\n        this.context = null;\n\n        /**\n         * Color of canvas when it is cleared\n         * @type {string}\n         */\n        this.clearColor = null;\n\n        /**\n         * Size of the canvas\n         * @type {{width: number, height: number}}\n         * @readonly\n         */\n        this.size = { width: width || 0, height: height || 0 };\n    }\n\n    initialize () {\n        super.initialize();\n\n        this.dom        = document.createElement(\"canvas\");\n        this.dom.id     = this.id;\n        this.dom.width  = this.width();\n        this.dom.height = this.height();\n        this.context    = this.dom.getContext(\"2d\");\n\n        this.setParentDOM();\n    }\n\n    render () {\n        this.clear();\n    }\n\n    /* METHODS */\n\n    /**\n     * Attach the canvas to the parent DOM\n     * @param {*=} dom: dom to attach the canvas\n     * @returns {void|null} null\n     */\n    setParentDOM (dom) {\n        dom = dom || this.parentDOM;\n\n        if (!dom || !this.dom) {\n            return null;\n        }\n\n        this.parentDOM = dom;\n        this.parentDOM.appendChild(this.dom);\n    }\n\n    /**\n     * Clear the canvas\n     * @param {string=} clearColor: color of the canvas when it will be cleared\n     * @returns {void}\n     */\n    clear (clearColor) {\n        const ctx = this.context;\n\n        ctx.clearRect(0, 0, this.width(), this.height());\n\n        if (clearColor || this.clearColor) {\n            ctx.fillStyle = clearColor || this.clearColor;\n            ctx.fillRect(0, 0, this.width(), this.height());\n        }\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * The name of the component\n     * @returns {string} name\n     */\n    get name () {\n        return \"canvas\";\n    }\n\n    /**\n     * Get or set the width\n     * @param {number=} width: if exist, the width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            this.size.width = width;\n\n            if (this.dom) {\n                this.dom.width = width;\n            }\n        }\n\n        return this.size.width;\n    }\n\n    /**\n     * Get or set the height\n     * @param {number=} height: if exist, the height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            this.size.height = height;\n\n            if (this.dom) {\n                this.dom.height = height;\n            }\n        }\n\n        return this.size.height;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Component/Canvas.js"],"sourceRoot":""}