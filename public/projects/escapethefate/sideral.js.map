{"version":3,"sources":["webpack:///webpack/bootstrap 5e7b90e25dcd19cd7e71?eacf","webpack:///./public/projects/escapethefate/src/index.js","webpack:///./src/Engine.js","webpack:///./src/Element.js","webpack:///./src/Class.js","webpack:///./src/Component/index.js","webpack:///./src/Scene/index.js","webpack:///./src/Entity/index.js","webpack:///./src/Component/Canvas.js","webpack:///./src/Component/Keyboard.js","webpack:///./public/projects/escapethefate/src/scenes/SceneWorld.js","webpack:///./public/projects/escapethefate/src/entities/EntityPlayer.js"],"names":["width","height","compose","attachScene","attachDOM","document","getElementById","run","Engine","storage","scenes","lastUpdate","fps","latence","tick","dom","stopped","map","scene","update","context","render","timeStart","window","performance","now","requestAnimationFrame","bind","Math","min","floor","Error","push","initialize","isComposedOf","canvas","setParentDOM","parentDOM","createElement","id","className","style","position","appendChild","forEach","Element","components","componentFunctions","destroyed","size","callComponentFunction","decompose","name","component","composedBy","componentName","index","pluggedFunctions","pluggedFunction","filter","compName","splice","callback","exist","Boolean","find","functionName","Array","prototype","slice","call","Class","generateId","props","key","hasOwnProperty","random","toString","substring","Component","functions","Object","getOwnPropertyNames","getPrototypeOf","prop","addComponentFunction","Scene","entities","gravity","scale","camera","x","y","following","follow","entity","pooling","entityPooling","poolX","reset","Entity","debug","lastPosition","relativePosition","mass","MASS","NONE","direction","speed","velocity","standing","falling","gravityFactor","strokeStyle","strokeRect","sqrt","bottom","right","entBottom","entRight","colBottom","colTop","colLeft","colRight","round","SOLID","WEAK","Canvas","clearColor","getContext","clear","ctx","clearRect","fillStyle","fillRect","Keyboard","input","_input","addEventListener","onKeydown","onKeyup","STATE","PRESSED","HOLD","RELEASED","e","keyCode","state","optionalState","KEY","getKeyState","SceneWorld","player","attachEntity","keyboard","isHeld","ARROW_RIGHT","ARROW_LEFT","left","ARROW_UP","top","ARROW_DOWN","moving","idle","EntityPlayer"],"mappings":"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","file":"projects/escapethefate/sideral.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5e7b90e25dcd19cd7e71","import Engine from \"src/Engine\";\nimport Keyboard from \"src/Component/Keyboard\";\n\nimport SceneWorld from \"./scenes/SceneWorld\";\n\n\n// Define the size of the engine\nEngine.width(500);\nEngine.height(200);\n\n// Let's start the engine\nEngine.compose(new Keyboard())\n    .attachScene(new SceneWorld());\n\n// Render the engine into a dom\nEngine.attachDOM(document.getElementById(\"sideral-app\"));\n\n// Start the loop\nEngine.run();\n\n\n\n// WEBPACK FOOTER //\n// ./public/projects/escapethefate/src/index.js","import Element from \"./Element\";\nimport Scene from \"./Scene\";\n\n\nclass Engine extends Element {\n\n    /* LIFECYCLE */\n    constructor () {\n        super();\n\n        /**\n         * Global data to store\n         * @type {{}}\n         */\n        this.storage = {};\n\n        /**\n         * List of scenes attached to engine\n         * @type {Array}\n         */\n        this.scenes = [];\n\n        /**\n         * Time since last update\n         * @type {number}\n         */\n        this.lastUpdate = 0;\n\n        /**\n         * Current FPS (Frames per second)\n         * @type {number}\n         */\n        this.fps = 60;\n\n        /**\n         * Current latence between each frame (in ms)\n         * @type {number}\n         */\n        this.latence = 0;\n\n        /**\n         * Current latence between each frame (in second)\n         * @type {number}\n         */\n        this.tick = 1;\n\n        /**\n         * DOM of the engine\n         * @type {null}\n         */\n        this.dom = null;\n\n        /**\n         * Stop the run\n         * @type {boolean}\n         * @readonly\n         */\n        this.stopped = false;\n    }\n\n    /**\n     * Update\n     * @returns {void}\n     */\n    update () {\n        super.update();\n\n        this.scenes.map(scene => scene.update());\n    }\n\n    /**\n     * Render\n     * @param {*=} context: canvas render (Engine has no context, it's only for overriding)\n     * @returns {void}\n     */\n    render (context) {\n        super.render(context);\n\n        this.scenes.map(scene => scene.render(context));\n    }\n\n    /**\n     * Run the engine\n     * @param {number=} timeStart: time sended by requestAnimationFrame\n     * @returns {void|null} null\n     */\n    run (timeStart) {\n        if (this.stopped) {\n            return null;\n        }\n\n        timeStart = timeStart || window.performance.now();\n        requestAnimationFrame(this.run.bind(this));\n\n        // 100ms latence max\n        this.latence    = Math.min(timeStart - this.lastUpdate, 100);\n        this.fps        = Math.floor(1000 / this.latence);\n        this.tick       = 1000 / (this.fps * 1000);\n\n        this.update();\n        this.render(null);\n\n        this.lastUpdate = window.performance.now();\n    }\n\n    /**\n     * Stop the loop\n     * @returns {void}\n     */\n    stop () {\n        this.stopped    = true;\n        this.tick       = 0;\n    }\n\n    /**\n     * Restart the loop\n     * @returns {void}\n     */\n    restart () {\n        this.stopped    = false;\n        this.run();\n    }\n\n    /**\n     * Attach a scene to current engine\n     * @param {*} scene: the scene to attach to the engine\n     * @returns {Engine} the current engine\n     */\n    attachScene (scene) {\n        if (!scene || (scene && !(scene instanceof Scene))) {\n            throw new Error(\"Engine.attachScene : scene must be an instance of Scene.\");\n        }\n\n        scene.width(this.width());\n        scene.height(this.height());\n\n        this.scenes.push(scene);\n        scene.initialize();\n\n        if (this.dom && scene.isComposedOf(\"canvas\")) {\n            scene.canvas.setParentDOM(this.dom);\n        }\n\n        return this;\n    }\n\n    reorganizeCanvas () {\n\n    }\n\n    /**\n     * Attach a dom to the parent dom passed by parameter\n     * @param {*} parentDOM: the dom to attach the engine\n     * @returns {Engine} : the current Engine\n     */\n    attachDOM (parentDOM) {\n        if (!parentDOM) {\n            throw new Error(\"Engine.initialize : dom must be passed to parameters and must be valid.\");\n        }\n\n        if (!this.dom) {\n            this.dom                = document.createElement(\"div\");\n            this.dom.id             = this.id;\n            this.dom.className      = \"sideral-engine\";\n            this.dom.style.position = \"relative\";\n        }\n\n        parentDOM.appendChild(this.dom);\n\n        this.scenes.forEach((scene) => {\n            if (scene.isComposedOf(\"canvas\")) {\n                scene.canvas.setParentDOM(this.dom);\n            }\n        });\n\n        return this;\n    }\n\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * The name of the engine\n     * @returns {string} the name\n     */\n    get name () {\n        return \"engine\";\n    }\n\n    /**\n     * Get or set the width\n     * @param {number=} width: if exist, width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            if (this.dom) {\n                this.dom.width = width;\n            }\n\n            this.scenes.forEach((scene) => {\n                scene.width(width);\n            });\n        }\n\n        return super.width(width);\n    }\n\n    /**\n     * Get or set the height\n     * @param {number=} height: if exist, height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            if (this.dom) {\n                this.dom.height = height;\n            }\n\n            this.scenes.forEach((scene) => {\n                scene.height(height);\n            });\n        }\n\n        return super.height(height);\n    }\n}\n\n\nexport default new Engine();\n\n\n\n// WEBPACK FOOTER //\n// ./src/Engine.js","import Class from \"./Class\";\nimport Component from \"./Component\";\n\n\nexport default class Element extends Class {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * List of components added to this element by their names\n         * @type {Array<string>}\n         */\n        this.components = [];\n\n        /**\n         * List of all component functions to be called\n         * @type {Array<Array<string>>}\n         */\n        this.componentFunctions = {};\n\n        /**\n         * Know if this component is detroyed or not\n         * @type {boolean}\n         * @private\n         */\n        this.destroyed = false;\n\n        /**\n         * Size of the element\n         * @type {{width: number, height: number}}\n         * @readonly\n         */\n        this.size = { width: 0, height: 0 };\n    }\n\n    /**\n     * Update the element\n     * @returns {void}\n     */\n    update () {\n        this.callComponentFunction(\"update\");\n    }\n\n    /**\n     * Render the element\n     * @param {*} context: context to render the element\n     * @returns {void}\n     */\n    render (context) {\n        this.callComponentFunction(\"render\", context);\n    }\n\n\n    /* METHODS */\n\n    /**\n     * Destroy the element\n     * @returns {void}\n     */\n    destroy () {\n        this.components.map(name => this.decompose(name));\n        this.destroyed = true;\n    }\n\n    /**\n     * Reset an element\n     * @returns {void}\n     */\n    reset () {\n        this.destroyed = false;\n    }\n\n\n    /* COMPONENTS */\n\n    /**\n     * Add a component into this element\n     * @param {Component} component: The component to be added\n     * @returns {Element} current element\n     */\n    compose (component) {\n        if (!(component instanceof Component)) {\n            throw new Error(\"Element.compose : the component is not an instance of Component.\");\n        }\n\n        component.composedBy = this;\n        this[component.name] = component;\n        this.components.push(component.name);\n        component.initialize();\n\n        return this;\n    }\n\n    /**\n     * Remove a component from the element\n     * @param {string} componentName: The name of the component\n     * @returns {Element} current element\n     */\n    decompose (componentName) {\n        this.components.map((name, index) => {\n            if (name === componentName) {\n                this[name].pluggedFunctions.map((pluggedFunction) => {\n                    if (this.componentFunctions[pluggedFunction]) {\n                        this.componentFunctions[pluggedFunction] = this.componentFunctions[pluggedFunction].filter(compName => compName !== name);\n                    }\n\n                    return null;\n                });\n\n                this.components.splice(index, 1);\n            }\n\n            return null;\n        });\n\n        return this;\n    }\n\n    /**\n     * Return true if the element has the component by its name\n     * @param {string} componentName: The name of the component\n     * @param {function=} callback: function to be executed if element is composed of the component\n     * @returns {boolean|function} the element is composed of the component\n     */\n    isComposedOf (componentName, callback) {\n        const exist = Boolean(this.components.find(component => component === componentName));\n\n        return callback && exist ? callback() : exist;\n    }\n\n    /**\n     * Add a new component function to be executed before the parent function\n     * @param {string} componentName: the name of the component\n     * @param {string} functionName: the name of the function\n     * @returns {void|null} nothing\n     */\n    addComponentFunction (componentName, functionName) {\n        if (!this.isComposedOf(componentName) || !this[functionName]) {\n            return null;\n        }\n\n        if (!this.componentFunctions[functionName]) {\n            this.componentFunctions[functionName] = [];\n        }\n\n        this.componentFunctions[functionName].push(componentName);\n    }\n\n    /**\n     * Call functions of components by name of the function\n     * @param {...*} functionName: the name of the function and other arguments to be transmitted into components\n     * @returns {void}\n     */\n    callComponentFunction (functionName) {\n        if (this.componentFunctions[functionName]) {\n            this.componentFunctions[functionName].map((name) => this[name][functionName](...Array.prototype.slice.call(arguments, 1)));\n        }\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * Name of the element\n     * @returns {string} the name\n     */\n    get name () {\n        return \"element\";\n    }\n\n    /**\n     * Get or set a width\n     * @param {number=} width: if exist, width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            this.size.width = width;\n        }\n\n        return this.size.width;\n    }\n\n    /**\n     * Get or set a height\n     * @param {number=} height: if exist, height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            this.size.height = height;\n        }\n\n        return this.size.height;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Element.js","export default class Class {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n\n        /**\n         * Unique id of element\n         * @type {string}\n         */\n        this.id = Class.generateId();\n    }\n\n    /**\n     * Set attributes to current instance\n     * @param {*} props: properties to merge\n     * @returns {*} SideralClass: current instance\n     */\n    props (props = {}) {\n        for (const key in props) {\n            if (props.hasOwnProperty(key)) {\n                this[key] = props[key];\n            }\n        }\n\n        return this;\n    }\n\n    /**\n     * Initialization of the element after it is created into the engine\n     * @returns {void}\n     */\n    initialize () { }\n\n    /* METHODS */\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * String identifier\n     * @returns {string} the name of the class\n     */\n    get name () {\n        return \"Class\";\n    }\n\n    /* STATICS */\n\n    /**\n     * Generate an unique id\n     * @returns {string} return the unique id\n     */\n    static generateId () {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).\n        substring(1);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Class.js","import Class from \"./../Class\";\n\n\nexport default class Component extends Class {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * Element which using this component\n         * @type {Element}\n         */\n        this.composedBy = null;\n\n        /**\n         * List of all functions plugged to the parent\n         * @type {Array}\n         */\n        this.pluggedFunctions = [];\n    }\n\n    /**\n     * Initialization of the component after it is composed\n     * @returns {void}\n     */\n    initialize () {\n        if (!this.composedBy) {\n            throw new Error(\"Component.initialize : A Component must be composed by an element before calling Initiliaze.\");\n        }\n\n        const functions = Object.getOwnPropertyNames(Object.getPrototypeOf(this)).filter(prop => prop !== \"constructor\" && prop !== \"initialize\");\n\n        this.pluggedFunctions = [];\n\n        functions.map((key) => {\n            if (this.composedBy[key]) {\n                this.composedBy.addComponentFunction(this.name, key);\n                this.pluggedFunctions.push(key);\n            }\n\n            return null;\n        });\n    }\n\n\n    /* METHODS */\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * Name of the component\n     * @returns {string} the name\n     */\n    get name () {\n        return \"component\";\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Component/index.js","import Element from \"../Element\";\nimport Entity from \"../Entity\";\nimport Canvas from \"../Component/Canvas\";\n\n\nexport default class Scene extends Element {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * List of entities\n         * @type {Array<Entity>}\n         */\n        this.entities = [];\n\n        /**\n         * Gravity of the scene\n         * @type {number}\n         */\n        this.gravity = 0;\n\n        /**\n         * Scale of all entities behind this scene\n         * @type {number}\n         */\n        this.scale = 1;\n\n        /**\n         * Position of the camera\n         * @type {{x: number, y: number, follow: Entity|null}}\n         */\n        this.camera = {x: 0, y: 0, following: null};\n    }\n\n    /**\n     * Initialization\n     * @returns {void}\n     */\n    initialize () {\n        super.initialize();\n\n        this.compose(new Canvas(this.width(), this.height()));\n    }\n\n    /**\n     * Update\n     * @returns {void}\n     */\n    update () {\n        super.update();\n\n        if (this.camera.follow) {\n            this.camera.x = this.camera.follow.x() + (this.camera.follow.width() * this.scale / 2) - (this.width() / 2 / this.scale);\n            this.camera.y = this.camera.follow.y() + (this.camera.follow.height() * this.scale / 2) - (this.height() / 2 / this.scale);\n        }\n\n        this.entities.map(entity => entity.update());\n    }\n\n    /**\n     * Render\n     * @param {*} context: context of the canvas (created inside this function)\n     * @returns {void}\n     */\n    render (context) {\n        context = this.canvas.context;\n        super.render(context);\n\n        this.entities.map(entity => entity.render(context));\n    }\n\n    /* METHODS */\n\n    /**\n     * Attach an entity to the scene\n     * @param {Entity} entity: entity to attach\n     * @param {number} x: position x of entity\n     * @param {number} y: position y of entity\n     * @returns {Scene} current instance\n     */\n    attachEntity (entity, x = 0, y = 0) {\n        if (!entity || (entity && !(entity instanceof Entity))) {\n            throw new Error(\"Scene.attachEntity : entity must be an instance of Entity\");\n        }\n\n        // Entity pooling mode\n        if (entity.pooling) {\n            const entityPooling = this.entities.find(poolX => poolX.pooling && poolX.destroyed);\n\n            if (entityPooling) {\n                entityPooling.x(x);\n                entityPooling.y(y);\n                entityPooling.reset();\n\n                return this;\n            }\n        }\n\n        this.entities.push(entity);\n        entity.x(x);\n        entity.y(y);\n        entity.scene = this;\n\n        entity.initialize();\n\n        return this;\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * The name of the scene\n     * @returns {string} the name\n     */\n    get name () {\n        return \"scene\";\n    }\n\n    /**\n     * Get or set the width\n     * @param {number=} width: if exist, width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            if (this.isComposedOf(\"canvas\")) {\n                this.canvas.width(width);\n            }\n        }\n\n        return super.width(width);\n    }\n\n    /**\n     * Get or set the height\n     * @param {number=} height: if exist, height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            if (this.isComposedOf(\"canvas\")) {\n                this.canvas.height(height);\n            }\n        }\n\n        return super.height(height);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Scene/index.js","import Element from \"./../Element\";\nimport Engine from \"./../Engine\";\n\n\nexport default class Entity extends Element {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        /**\n         * Show more information about entity on screen\n         * @type {boolean}\n         */\n        this.debug = false;\n\n        /**\n         * Reference to the current scene\n         * @type {*}\n         */\n        this.scene = null;\n\n        /**\n         * Position of entity\n         * @type {{x: number, y: number}}\n         * @readonly\n         */\n        this.position = {x: 0, y: 0};\n\n        /**\n         * Last position of entity\n         * @type {{x: number, y: number}}\n         * @readonly\n         */\n        this.lastPosition = {x: 0, y: 0};\n\n        /**\n         * If true, the position of this entity will be compared to the camera position\n         * @type {boolean}\n         */\n        this.relativePosition = false;\n\n        /**\n         * Mass of the entity (used for collision)\n         * @type {string}\n         */\n        this.mass = Entity.MASS.NONE;\n\n        /**\n         * Direction movement of the entity\n         * @type {{x: number, y: number}}\n         */\n        this.direction = {x: 0, y: 0};\n\n        /**\n         * Speed movement of the entity\n         * @type {{x: number, y: number}}\n         */\n        this.speed = {x: 100, y: 100};\n\n        /**\n         * Velocity of the entity\n         * @type {{x: number, y: number}}\n         * @readonly\n         */\n        this.velocity = {x: 0, y: 0};\n\n        /**\n         * Know if the entity is standing on a ground (or over an entity)\n         * @type {boolean}\n         * @readonly\n         */\n        this.standing = false;\n\n        /**\n         * Know if the entity is falling (used with gravity)\n         * @type {boolean}\n         * @readonly\n         */\n        this.falling = false;\n\n        /**\n         * Factor of scene gravity\n         * @type {number}\n         */\n        this.gravityFactor = 1;\n\n        /**\n         * If true, this entity will pass into \"pooling mode\" (for memory sake)\n         * @type {boolean}\n         */\n        this.pooling = false;\n\n        this.width(10);\n        this.height(10);\n    }\n\n    /**\n     * Destroy the element\n     * @returns {void}\n     */\n    destroy () {\n        if (!this.pooling) {\n            super.destroy();\n        }\n\n        this.destroyed = true;\n    }\n\n    /**\n     * Update\n     * @returns {void}\n     */\n    update () {\n        super.update();\n\n        if (this.direction.x) {\n            this.velocity.x = this.speed.x * this.direction.x * Engine.tick;\n            this.x(this.x() + this.velocity.x);\n        }\n\n        this.velocity.y = this.scene && this.scene.gravity && this.gravityFactor ? this.scene.gravity * this.gravityFactor * Engine.tick : 0;\n        if (this.velocity.y || this.direction.y) {\n            this.velocity.y += this.speed.y * this.direction.y * Engine.tick;\n            this.y(this.y() + this.velocity.y);\n        }\n    }\n\n    /**\n     * Render\n     * @param {*} context: canvas context\n     * @returns {void}\n     */\n    render (context) {\n        super.render(context);\n\n        if (this.debug) {\n            context.strokeStyle = \"rgb(255, 0, 0)\";\n            context.strokeRect(this.x() - this.scene.camera.x, this.y() - this.scene.camera.y, this.width(), this.height());\n        }\n    }\n\n    /* METHODS */\n\n    /**\n     * Get distance between this entity and an other\n     * @param {Entity} entity: entity target\n     * @returns {number} distance from entity target\n     */\n    distanceTo (entity) {\n        if (!entity) {\n            return 0;\n        }\n\n        const x = (this.x() + (this.width() / 2)) - (entity.x() + (entity.width() / 2)),\n            y   = (this.y() + (this.height() / 2)) - (entity.y() + (entity.height() / 2));\n\n        return Math.sqrt((x * x) + (y * y));\n    }\n\n    /**\n     * Compare coordinate to another entity to provide a coordinate direction\n     * @param {Entity} entity: entity to compare\n     * @returns {{x: number, y: number}} coordinate direction\n     */\n    directionTo (entity) {\n        const bottom    = this.y() + this.height(),\n            right       = this.x() + this.width(),\n            entBottom   = entity.y() + entity.height(),\n            entRight    = entity.x() + entity.width(),\n            colBottom   = entBottom - this.y(),\n            colTop      = bottom - entity.y(),\n            colLeft     = right - entity.x(),\n            colRight    = entRight - this.x();\n\n        if (colTop < colBottom && colTop < colLeft && colTop < colRight) {\n            return {x: 0, y: 1};\n\n        } else if (colBottom < colTop && colBottom < colLeft && colBottom < colRight) {\n            return {x: 0, y: -1};\n\n        } else if (colLeft < colRight && colLeft < colTop && colLeft < colBottom) {\n            return {x: 1, y: 0};\n\n        } else if (colRight < colLeft && colRight < colTop && colRight < colBottom) {\n            return {x: -1, y: 0};\n\n        }\n\n        return {x: 0, y: 0};\n    }\n\n    /**\n     * Know if the target entity and the current entity is intersecting\n     * @param {Entity} entity: entity to compare\n     * @returns {boolean} true if the entity intersect the entity target\n     */\n    intersect (entity) {\n        return !(entity.x() > (this.x() + this.width()) ||\n        (entity.x() + entity.width()) < this.x() ||\n        entity.y() > (this.y() + this.height()) ||\n        (entity.x() + entity.height()) < this.y());\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * Name of the entity\n     * @returns {string} name\n     */\n    get name () {\n        return \"entity\";\n    }\n\n    get moving () {\n        return this.direction.x || this.direction.y;\n    }\n\n    /**\n     * Get or set x position\n     * @param {number=} x: if exist, x will be setted\n     * @returns {number} the current position x\n     */\n    x (x) {\n        if (typeof x !== \"undefined\") {\n            this.lastPosition.x = this.position.x;\n            this.position.x     = Math.round(x);\n        }\n\n        return this.relativePosition && this.scene ? this.position.x - this.scene.camera.x : this.position.x;\n    }\n\n    /**\n     * Get or set y position\n     * @param {number=} y: if exist, y will be setted\n     * @returns {number} the current position y\n     */\n    y (y) {\n        if (typeof y !== \"undefined\") {\n            this.lastPosition.y = this.position.y;\n            this.position.y     = Math.round(y);\n        }\n\n        return this.relativePosition && this.scene ? this.position.y - this.scene.camera.y : this.position.y;\n    }\n}\n\nEntity.MASS = {\n    SOLID: \"solid\",\n    WEAK: \"weak\",\n    NONE: \"none\"\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/Entity/index.js","import Component from \"./index\";\n\n\nexport default class Canvas extends Component {\n\n    /* LIFECYCLE */\n    /**\n     * Canvas constructor\n     * @param {number} width: width of the canvas\n     * @param {number} height: height of the canvas\n     * @param {*=} parentDOM: DOM node to attach the canvas\n     */\n    constructor (width, height, parentDOM) {\n        super();\n\n        /**\n         * DOM parent of the canvas\n         */\n        this.parentDOM = parentDOM;\n\n        /**\n         * Dom of the canvas\n         * @type {*}\n         */\n        this.dom = null;\n\n        /**\n         * Context of the canvas\n         * @type {*}\n         */\n        this.context = null;\n\n        /**\n         * Color of canvas when it is cleared\n         * @type {string}\n         */\n        this.clearColor = null;\n\n        /**\n         * Size of the canvas\n         * @type {{width: number, height: number}}\n         * @readonly\n         */\n        this.size = { width: width || 0, height: height || 0 };\n    }\n\n    initialize () {\n        super.initialize();\n\n        this.dom        = document.createElement(\"canvas\");\n        this.dom.id     = this.id;\n        this.dom.width  = this.width();\n        this.dom.height = this.height();\n        this.context    = this.dom.getContext(\"2d\");\n\n        this.setParentDOM();\n    }\n\n    render () {\n        this.clear();\n    }\n\n    /* METHODS */\n\n    /**\n     * Attach the canvas to the parent DOM\n     * @param {*=} dom: dom to attach the canvas\n     * @returns {void|null} null\n     */\n    setParentDOM (dom) {\n        dom = dom || this.parentDOM;\n\n        if (!dom || !this.dom) {\n            return null;\n        }\n\n        this.parentDOM = dom;\n        this.parentDOM.appendChild(this.dom);\n    }\n\n    /**\n     * Clear the canvas\n     * @param {string=} clearColor: color of the canvas when it will be cleared\n     * @returns {void}\n     */\n    clear (clearColor) {\n        const ctx = this.context;\n\n        ctx.clearRect(0, 0, this.width(), this.height());\n\n        if (clearColor || this.clearColor) {\n            ctx.fillStyle = clearColor || this.clearColor;\n            ctx.fillRect(0, 0, this.width(), this.height());\n        }\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * The name of the component\n     * @returns {string} name\n     */\n    get name () {\n        return \"canvas\";\n    }\n\n    /**\n     * Get or set the width\n     * @param {number=} width: if exist, the width will be setted\n     * @returns {number} the current width\n     */\n    width (width) {\n        if (typeof width !== \"undefined\") {\n            this.size.width = width;\n\n            if (this.dom) {\n                this.dom.width = width;\n            }\n        }\n\n        return this.size.width;\n    }\n\n    /**\n     * Get or set the height\n     * @param {number=} height: if exist, the height will be setted\n     * @returns {number} the current height\n     */\n    height (height) {\n        if (typeof height !== \"undefined\") {\n            this.size.height = height;\n\n            if (this.dom) {\n                this.dom.height = height;\n            }\n        }\n\n        return this.size.height;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Component/Canvas.js","import Component from \"./index\";\n\n\nexport default class Keyboard extends Component {\n\n    /* LIFECYCLE */\n\n    constructor () {\n        super();\n\n        /**\n         * Public input attributes\n         * @type {{}}\n         */\n        this.input = {};\n\n        /**\n         * Private input attributes, do not use it\n         * @type {{}}\n         * @private\n         */\n        this._input = {};\n    }\n\n    /**\n     * @initialize\n     * @returns {void}\n     */\n    initialize () {\n        super.initialize();\n\n        window.addEventListener('keydown', this.onKeydown.bind(this));\n        window.addEventListener('keyup', this.onKeyup.bind(this));\n    }\n\n    /**\n     * @update\n     * @returns {void}\n     */\n    update () {\n        for (const key in this._input) {\n            let input = this.input[key],\n                _input = this._input[key];\n\n            // Pressed\n            if (_input == this.STATE.PRESSED) {\n                if (input == _input) {\n                    this.input[key] = this.STATE.HOLD;\n\n                } else if (input != this.STATE.HOLD) {\n                    this.input[key] = this.STATE.PRESSED;\n                }\n\n                // Released\n            } else if (_input == this.STATE.RELEASED) {\n                if (!input) {\n                    this.input[key] = this.STATE.PRESSED;\n\n                } else if (input == _input) {\n                    delete this.input[key];\n                    delete this._input[key];\n\n                } else {\n                    this.input[key] = this.STATE.RELEASED;\n                }\n\n            }\n        }\n    }\n\n    /* METHODS */\n\n    /**\n     * event on keydown\n     * @event keydown\n     * @param {*} e: event\n     * @returns {void}\n     */\n    onKeydown (e) {\n        this._input[e.keyCode] = this.STATE.PRESSED;\n    }\n\n    /**\n     * event on keyup\n     * @event keyup\n     * @param {*} e: event\n     * @returns {void}\n     */\n    onKeyup (e) {\n        this._input[e.keyCode] = this.STATE.RELEASED;\n    }\n\n    /**\n     * Get current state of a key\n     * @param key\n     * @param state\n     * @param optionalState\n     * @returns {boolean}\n     */\n    getKeyState (key, state, optionalState = null)\n    {\n        const input = this.input[typeof(key) === 'string' ? this.KEY[key] : key];\n\n        if (input && optionalState) {\n            return input === this.STATE[state] || input === this.STATE[optionalState];\n        }\n\n        return input ? input === this.STATE[state] : false;\n    }\n\n    /**\n     * Know if a key is pressed\n     * @param key\n     * @returns {boolean}\n     */\n    isPressed (key) {\n        return this.getKeyState(key, 'PRESSED');\n    }\n\n    /**\n     * Know if a key is held\n     * @param key\n     * @returns {boolean}\n     */\n    isHeld (key) {\n        return this.getKeyState(key, 'PRESSED', 'HOLD');\n    }\n\n    /**\n     * Know if a key is released\n     * @param key\n     * @returns {boolean}\n     */\n    isReleased (key) {\n        return this.getKeyState(key, 'RELEASED');\n    }\n\n    /* GETTERS & SETTERS */\n\n    /**\n     * Get name of the component\n     * @returns {string} the name of the component\n     */\n    get name () {\n        return \"keyboard\";\n    }\n\n    /**\n     * List of all key usable\n     * @type {*}\n     */\n    get KEY () {\n        return {\n            'BACKSPACE': 8,\n            'TAB': 9,\n            'ENTER': 13,\n            'PAUSE': 19,\n            'CAPS': 20,\n            'ESC': 27,\n            'SPACE': 32,\n            'PAGE_UP': 33,\n            'PAGE_DOWN': 34,\n            'END': 35,\n            'HOME': 36,\n            'ARROW_LEFT': 37,\n            'ARROW_UP': 38,\n            'ARROW_RIGHT': 39,\n            'ARROW_DOWN': 40,\n            'INSERT': 45,\n            'DELETE': 46,\n            'NUM_0': 48,\n            'NUM_1': 49,\n            'NUM_2': 50,\n            'NUM_3': 51,\n            'NUM_4': 52,\n            'NUM_5': 53,\n            'NUM_6': 54,\n            'NUM_7': 55,\n            'NUM_8': 56,\n            'NUM_9': 57,\n            'A': 65,\n            'B': 66,\n            'C': 67,\n            'D': 68,\n            'E': 69,\n            'F': 70,\n            'G': 71,\n            'H': 72,\n            'I': 73,\n            'J': 74,\n            'K': 75,\n            'L': 76,\n            'M': 77,\n            'N': 78,\n            'O': 79,\n            'P': 80,\n            'Q': 81,\n            'R': 82,\n            'S': 83,\n            'T': 84,\n            'U': 85,\n            'V': 86,\n            'W': 87,\n            'X': 88,\n            'Y': 89,\n            'Z': 90,\n            'NUMPAD_0': 96,\n            'NUMPAD_1': 97,\n            'NUMPAD_2': 98,\n            'NUMPAD_3': 99,\n            'NUMPAD_4': 100,\n            'NUMPAD_5': 101,\n            'NUMPAD_6': 102,\n            'NUMPAD_7': 103,\n            'NUMPAD_8': 104,\n            'NUMPAD_9': 105,\n            'MULTIPLY': 106,\n            'ADD': 107,\n            'SUBSTRACT': 109,\n            'DECIMAL': 110,\n            'DIVIDE': 111,\n            'F1': 112,\n            'F2': 113,\n            'F3': 114,\n            'F4': 115,\n            'F5': 116,\n            'F6': 117,\n            'F7': 118,\n            'F8': 119,\n            'F9': 120,\n            'F10': 121,\n            'F11': 122,\n            'F12': 123,\n            'SHIFT': 16,\n            'CTRL': 17,\n            'ALT': 18,\n            'PLUS': 187,\n            'COMMA': 188,\n            'MINUS': 189,\n            'PERIOD': 190\n        };\n    }\n\n    /**\n     * List of key state\n     * @type {{}}\n     */\n    get STATE () {\n        return {\n            PRESSED: 'pressed',\n            RELEASED: 'released',\n            HOLD: 'hold'\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/Component/Keyboard.js","import Engine from \"src/Engine\";\nimport Scene from \"src/Scene\";\n\nimport EntityPlayer from \"./../entities/EntityPlayer\";\n\n\nexport default class SceneWorld extends Scene {\n\n    /* LIFECYCLE */\n\n    /**\n     * @initialize\n     * @returns {void}\n     */\n    initialize () {\n        super.initialize();\n\n        this.canvas.clearColor  = \"black\";\n        this.player             = new EntityPlayer();\n\n        this.attachEntity(this.player, 10, 10);\n    }\n\n    /**\n     * @update\n     * @returns {void}\n     */\n    update () {\n        super.update();\n\n        if (Engine.keyboard.isHeld(Engine.keyboard.KEY.ARROW_RIGHT)) {\n            this.player.right();\n\n        } else if (Engine.keyboard.isHeld(Engine.keyboard.KEY.ARROW_LEFT)) {\n            this.player.left();\n\n        } else if (Engine.keyboard.isHeld(Engine.keyboard.KEY.ARROW_UP)) {\n            this.player.top();\n\n        } else if (Engine.keyboard.isHeld(Engine.keyboard.KEY.ARROW_DOWN)) {\n            this.player.bottom();\n\n        } else if (this.player.moving) {\n            this.player.idle();\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./public/projects/escapethefate/src/scenes/SceneWorld.js","import Entity from \"src/Entity\";\n\n\nexport default class EntityPlayer extends Entity {\n\n    /* LIFECYCLE */\n\n    /**\n     * @constructor\n     */\n    constructor () {\n        super();\n\n        // Set properties\n        this.props({\n            size : { width: 20, height: 20 },\n            debug: true\n        });\n    }\n\n    /* METHODS */\n\n    right () {\n        this.direction = {x: 1, y: 0};\n    }\n\n    idle () {\n        this.direction = {x: 0, y: 0};\n    }\n\n    left () {\n        this.direction = {x: -1, y: 0};\n    }\n\n    top () {\n        this.direction = {x: 0, y: -1};\n    }\n\n    bottom () {\n        this.direction = {x: 0, y: 1};\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./public/projects/escapethefate/src/entities/EntityPlayer.js"],"sourceRoot":""}